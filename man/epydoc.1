.\"
.\" Epydoc command line interface man page.
.\" $Id$
.\"
.TH EPYDOC 1 
.SH NAME
epydoc \- generate API documentation from Python docstrings
.\" ================== SYNOPSIS ====================
.SH SYNOPSIS
.HP 7
.BR epydoc "\ [" \-o
.IR dir ]
.RB [ \-n
.IR name ]
.RB [ \-u
.IR url ]
.RB [ \-v ]
.RB [ \-q ]
.RB [ \-c
.IR sheet ]
.RB [ \-\-private\-css
.IR sheet ]
.RB [ \-\-no\-private ]
.RB [ \-\-no\-frames ]
.RB [ \-\-show\-imports ]
.RB [ \-\-help\-file
.IR file ]
.RB [ \-\-builtins ]
.RB [ \-\-docformat
.IR format ]
.IB modules ...
.HP 7
.B epydoc \-\-check
.RB [ \-p ]
.RB [ \-q ]
.RB [ \-v ]
.IB modules ...
.HP 7
.B epydoc \-h
.RI [ topic ]
.HP 7
.B epydoc \-V
.\" ================== DESCRIPTION ====================
.SH DESCRIPTION
.B epydoc
generates API documentation for Python modules and packages, based on
their docstrings.  A lightweight markup language called
.B epytext
can be used to format docstrings, and to add information about
specific fields, such as parameters and instance variables.
.PP
The API documentation produced by 
.B epydoc
consists of a set of HTML files.  Two subdirectories are created for
the public and private documentation.  Within each subdirectories,
every class and module is documented in its own file.  An index file,
a trees file, and a help file are also created.  If the
.B \-f
option is used, then a frames\-based table of contents is also
produced.
.PP
.B epydoc
can also be used to check the completeness of the API documentation.
In particular, it will check that every package, module, class,
method, and function has a description; and that every variable and
parameter has a description and a type.
.\" ================== OPTIONS ====================
.SH OPTIONS
Options are divided into three categories: documentation generation
options; documentation checking options; and other options.  All
options must preceed the list of modules.
.PP
Documentation generation options:
.RS 4
.TP
.B modules...
The list of the modules that should be documented.  Modules may be
specified using either filenames (such as
.BR epydoc/epytext.py )
or module names (such as
.BR os.path ).
The filename for a package is its
.B __init__.py
file.
.TP
.B \-\-builtins
Add the builtin modules (as defined by sys.builtin_module_names) to
the list of modules to document.
.TP
.BI "\-c " sheet ", \-\-css " sheet
CSS stylesheet for HTML files containing public API documentation.  If
.I sheet
is a file, then the stylesheet is copied from that file; otherwise,
.I sheet
is taken to be the name of a built\-in stylesheet.  For a list of
the built\-in stylesheets, run
.BR "epydoc \-\-help css" .
.TP
.BI "\-\-docformat " format
Set the default value for
.B __docformat__
to
.IR format .
.B __docformat__
is a module variable that specifies the markup language for the
docstrings in a module.  Its value consists of the name of a markup
language, optionally followed by a language code (such as
.B en
for English).  For a list of the markup languages currently recognized
by epydoc, run
.BR "epydoc \-\-help docformat" .
.TP
.BI "\-\-help\-file " file
A file containing the body of the help page for the HTML output.
Navigation bars will be added at the top and bottom of this help file.
If no file is specified, then a default help file is used.
.TP
.BI "\-n " name ", \-\-name " name
Project name (for HTML header/footer)
.TP
.B \-\-no\-frames
Do not generate a frames\-based table of contents.
.BR "epydoc \-\-help css" .
If a CSS stylesheet is not specified, then the default stylesheet is
used.
.TP
.B \-\-no\-private
Do not produce documentation for private objects.
.TP
.BI "\-o " dir ", \-\-output " dir ", \-\-target " dir
The output directory for HTML files.  By default, HTML files are
written to the
.B html
directory.
.TP
.BI "\-\-private\-css " sheet
CSS stylesheet for HTML files containing private API documentation.
If
.I sheet
is a file, then the stylesheet is copied from that file;
otherwise, 
.I sheet
is taken to be the name of a built\-in stylesheet.  For a list of the
built\-in stylesheets, run 
.BR "epydoc \-\-help css" .
If a CSS stylesheet is not specified, then epydoc uses the same
stylesheet that it uses for public API documentation.
.TP
.B \-q, \-\-quiet
Supress the generation of epytext warnings and errors.
.TP
.B \-\-show\-imports
Include a list of the classes and functions that each module imports
on the module documentation pages.
.TP
.BI "\-u " url ", \-\-url " url
Project URL (for HTML header/footer)
.TP
.B \-v, \-\-verbose
Produce verbose output.  In particular, this option displays progress
bars while it imports the modules, builds the documentation, and
writes the documentation.
.TP
.B \-vv, \-vvv, \-vvvv
Produce successively more verbose output.
.RE
.PP
Documentation checking options:
.RS 4
.TP
.B modules...
The list of the modules whose documentation should be checked.
Modules may be specified using either filenames (such as
.BR epydoc/epytext.py )
or module names (such as
.BR os.path ).
The filename for a package is its
.B __init__.py
file.
.TP
.B \-\-check
Perform completeness checks on the documentation.
.TP
.B \-p
Perform checks on private objects.
.TP
.B \-q
Supress the generation of epytext warnings and errors.
.TP
.B \-v, \-\-verbose
Produce verbose output.
.RE
.PP
Other options:
.RS 4
.TP
.B \-h, \-\-help, \-\-usage, \-?
Display a usage message.
.TP
.BI "\-h " topic ", \-\-help " topic
Display information about a specific topic.  Currently,
information is available about the following topics:
.BR css ", " version ", and " usage .
.TP
.B \-V, \-\-version
Print the version of Epydoc.
.RE
.\" ================== HTML FILES ====================
.SH HTML FILES
The API documentation produced by 
.B epydoc
consists of the following files:
.RS 4
.TP
.IB module .html
The API documentation for a module.  
.I module
is the complete dotted name of the module, such as 
.B sys
or
.BR epydoc.epytext .
.TP
.IB class .html
The API documentation for a class, exception, or type.
.I class
is the complete dotted name of the class, such as
.B epydoc.epytext.Token
or
.BR array.ArrayType .
.TP
.B epydoc\-trees.html
The module and class hierarchies for the project.
.TP
.B epydoc\-index.html
The term index and identifier index for the project.
.TP
.B epydoc\-help.html
The help page for the project.  This page explains how to use and
navigate the webpage produced by epydoc.
.TP
.B epydoc\-frames.html
The frames index file.  This file defines three frames: two frames on
the left side of the window contain a table of contents, and the main
frame on the right side of the window contains documentation pages.
.B epydoc\-frames.html
is not generated if the
.B \-\-no\-frames
option is used to create a frames\-based table of contents.
.TP
.B epydoc\-toc.html
The top\-level table of contents page.  This page is displayed in the
upper\-left frame of
.BR epydoc\-frames.html ,
and provides links to
.B epydoc\-project\-toc.html
and the
.IB module \-mtoc.html
files.
.B epydoc\-toc.html
is not generated if the
.B \-\-no\-frames
option is used to create a frames\-based table of contents.
.TP
.B epydoc\-project\-toc.html
The table of contents for the entire project.  This page is displayed
in the lower\-left frame of
.BR epydoc\-frames.html ,
and provides links to every class, type, exception, function, and
variable defined by the project.
.B epydoc\-project\-toc.html
is not generated if the
.B \-\-no\-frames
option is used to create a frames\-based table of contents.
.TP
.IB module \-mtoc.html
The table of contents for a module.  This page is displayed in the
lower\-left frame of
.BR epydoc\-frames.html ,
and provides links to every class, type, exception, function, and
variable defined by the module.
.I module
is the complete dotted name of the module, such as 
.B sys
or
.BR epydoc.epytext .
.IB module \-mtoc.html
is not generated if the
.B \-\-no\-frames
option is used to create a frames\-based table of contents.
.TP
.B epydoc.css
The CSS stylesheet used to display all HTML pages.
.RE
.PP
By default,
.B epydoc
creates two subdirectories in the output directory:
.B public
and
.BR private .
Each directory contains all of the files specified above.
But if the
.B \-\-no\-private
option is used, then no subdirectories are created, and the public
documentation is written directly to the output directory.
.\" ================== EXAMPLES ====================
.SH EXAMPLES
.TP
.BR "epydoc \-n " epydoc " \-u " "http://epydoc.sf.net epydoc/*.py"
Generate API documentation for the epydoc package and all of its
submodules, and write the output to the
.B html
directory.  In the headers and footers, use
.B epydoc
as the project name, and
.B http://epydoc.sf.net
as the project URL.
.TP
.BR "epydoc \-o "api " \-\-css " blue " \-\-private\-css " "green sys"
Generate API documentation for the
.B sys
module, and write the output to the
.B api
directory.  Use different stylesheets for the public and private
versions of the documentation.
.\" ================== DIAGNOSTICS ====================
.SH DIAGNOSTICS
Errors are divided into five categories: import errors; epytext
errors; epytext warnings; field warnings; and documentation building
errors.  Whenver epydoc encounters an error, it issues a warning
message that describes the error, and attempts to continue generating
documentation.
.PP
Import errors typically prevent one or more modules from getting
documented.  Epydoc generates the following import errors:
.RS 4
.TP
.BI "Bad module name " module
Epydoc attempted to import
.IR module ,
but
.I module
is not a valid name for a Python module.
.TP
.BI "Could not find a UID for " link-target
 ...
.TP
.BI "Could not import " module
Epydoc attempted to import
.IR module ,
but it failed.  This typically occurs when
.I module
raises an exception.
.TP
.IB file " does not exist"
Epydoc attempted to import the module contained in
.IR file ,
but
.I file
does not exist.
.RE
.PP
Epytext errors are caused when a docstring does not contain valid
epytext
.RS 4
.TP
.B Bad link target.
The target specified for an inline link contruction
.RB ( "L{...}" )
is not well-formed.  Link targets must be valid python identifiers.
.TP
.B Bad uri target.
The target specified for an inline uri contruction
.RB ( "U{...}" )
is not well-formed.  This typically occurs if inline markup is nested
inside the URI target.  
.TP
.B Fields must be at the top level.
The list of fields
.RB "(" @param ", etc.)"
is contained by some other
block structure (such as a list or a section).
.TP
.B Fields must be the final elements.
The list of fields
.RB "(" @param ", etc.)"
is not at the end of a docstring.
.TP
.B Headings must occur at top level.
The heading is contianed in some other block structure (such as a
list).
.TP
.B Improper heading indentation.
The heading for a section is not left-aligned with the paragraphs in
the section that contains it.
.TP
.B Improper paragraph indentation.
The paragraphs within a block are not left-aligned.  This error is
often generated when plaintext docstrings are parsed using epytext.
.TP
.B Invalid escape.
An unknown escape sequence was used with the inline escape construction
.RB ( "E{...}" ).
.TP
.B Unbalanced '{'.
The docstring contains unbalanced braces.  Epytext requires that all
braces must be balanced.  To include a single unbalanced brace, use
the escape sequences E{lb} (left brace) and E{rb} (right brace).
.TP
.B Unbalanced '}'.
The docstring contains unbalanced braces.  Epytext requires that all
braces must be balanced.  To include a single unbalanced brace, use
the escape sequences E{lb} (left brace) and E{rb} (right brace).
.TP
.B Unknown inline markup tag.
An unknown tag was used with the inline markup construction (
.IB x {...}
).
.TP
.B Wrong underline character for heading.
The underline character used for this section heading does not
indicate an appopriate section level.  The "=" character should be
used to underline sections; "-" for subsections; and "~" for
subsubsections.
.RE
.PP
Epytext warnings:
.RS 4
.TP
.B Improper doctest block indentation.
The doctest block dedents past the indentation of its initial prompt
line.
.TP
.B Lists should be indented or separated.
An unindented line immediately following a paragraph starts with a
list bullet.  Epytext is not sure whether you meant to start a new
list item, or meant for a paragraph to include a word that looks like
a bullet.  If you intended the former, then indent the list, or
separate it from the paragraph by a blank line.  If you intended the
latter, then fix the word-wrapping of the paragraph, or escape the
word that looks like a bullet.
.TP
.B Possible mal-formatted field item.
Epytext detected a line that looks like a field item, but is not
correctly formatted.  This typically occurs when the trailing colon
(":") is not included in the field tag.
.TP
.B Possible heading typo.
Epytext detected a pair of lines that looks like a heading, but the
number of underline characters does not match the number of characters
in the heading.  The number of characters in these two lines must
match exactly for them to be considered a heading.
.RE
.PP
Field warnings:
.RS 4
.TP
.BI "@param for unknown parameter " param .
A @param field was used to specify the type for a parameter that is
not included in the function's signature.  This is typically caused by
a typo in the parameter name.
.TP
.IB tag " did not expect an argument."
The field tag
.I tag
was used with an argument, but it does not take one.
.TP
.IB tag " expected an argument."
The field tag
.I tag
was used without an argument, but it requires one.
.TP
.BI "@type for unknown parameter " param .
A @type field was used to specify the type for a parameter that is not
included in the function's signature.  This is typically
caused by a typo in the parameter name.
.TP
.BI "@type for unknown variable " var .
A @type field was used to specify the type for a variable, but no
other information is known about the variable.  This is typically
caused by a typo in the variable name.
.TP
.BI "Unknown field tag " tag .
A docstring contains a field with the unknown tag
.IR tag .
.TP
.IB field " redefined."
Multiple field tags define the value of
.I field
in the same docstring, but
.I field
can only take a single value.
.RE
.PP
Documentation building errors:
.RS 4
.TP
.BI "The parameters of " inhmethod " do not match " basemethod .
Blah balh blah.   Blah balh blah.   Blah balh blah.   Blah balh blah.
Blah balh blah.   Blah balh blah.   Blah balh blah.   Blah balh blah.   
.TP
.BI "Docmap cannot add a " type
 ...
.TP
.BI "UID conflict detected: " uid
 ...
.TP
.IB object " appears in multiple builtin modules"
 ...
.TP
.IB object " appears in multiple .py modules"
 ...
.TP
.IB object " appears in multiple .so modules"
 ...
.TP
.BI "Could not find a module for " module
 ...
.RE
.PP
Other errors:
.RS 4
.TP
.BI "INTERNAL ERROR: " message
Epydoc caught an unexpected exception, and attempted to resume
processing.  Use the
.B \-\-debug
option to view the exception.
.RE
.\" ================== EXIT STATUS ====================
.SH EXIT STATUS
.TP
.B 0
Successful program execution.
.TP
.B 1
Usage error.
.TP
.B other
Internal error (Python exception).
.SH AUTHOR
Epydoc was written by Edward Loper.  This man page was originally
written by Moshe Zadka, and is currently maintained by Edward Loper.
.SH BUGS
Report bugs to <edloper@gradient.cis.upenn.edu>.
.SH SEE ALSO
.BR epydocgui (1)
.TP
.B The epydoc webpage
<http://epydoc.sourceforge.net>
.TP
.B The epytext markup language manual
<http://epydoc.sourceforge.net/epytext.html>
