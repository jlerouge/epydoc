.\"
.\" Epydoc man page.
.\" $Id$
.\"
.TH EPYDOC 1 
.SH NAME
epydoc \- generate API documentation from Python docstrings
.\" ================== SYNOPSIS ====================
.SH SYNOPSIS
.HP 7
.BR epydoc "\ [" \-o
.IR dir ]
.RB [ \-n
.IR name ]
.RB [ \-u
.IR url ]
.RB [ \-f ]
.RB [ \-c
.IR sheet ]
.RB [ \-v ]
.RB [ \-q ]
.RB [ \-\-help\-file
.IR file ]
.RB [ \-\-no\-private ]
.RB [ \-\-private\-css
.IR sheet ]
.RB [ \-\-show\-imports ]
.RB [ \-\-builtins ]
.IB modules ...
.HP 7
.B epydoc \-\-check
.RB [ \-p ]
.RB [ \-v ]
.RB [ \-q ]
.IB modules ...
.HP 7
.B epydoc \-h
.RI [ topic ]
.HP 7
.B epydoc \-V
.\" ================== DESCRIPTION ====================
.SH DESCRIPTION
.B epydoc
generates API documentation for Python modules and packages, based on
their docstrings.  A lightweight markup language called
.B epytext
can be used to format docstrings, and to add information about
specific fields, such as parameters and instance variables.
.PP
The API documentation produced by 
.B epydoc
consists of a set of HTML files.  Two subdirectories are created for
the public and private documentation.  Within each subdirectories,
every class and module is documented in its own file.  An index file,
a trees file, and a help file are also created.  If the
.B \-f
option is used, then a frames\-based table of contents is also
produced.
.PP
.B epydoc
can also be used to check the completeness of the API documentation.
In particular, it will check that every package, module, class,
method, and function has a description; and that every variable and
parameter has a description and a type.
.\" ================== OPTIONS ====================
.SH OPTIONS
Options are divided into three categories: documentation generation
options; documentation checking options; and other options.  Options
must always preceed the list of modules.
.PP
Documentation generation options:
.RS 4
.TP
.B modules...
The list of the modules that should be documented.  Modules may be
specified using either filenames (such as
.BR epydoc/epytext.py )
or module names (such as
.BR os.path ).
The filename for a package is its
.B __init__.py
file.
.TP
.BI "\-o " dir ", \-\-output " dir ", \-\-target " dir
The output directory for HTML files.  By default, HTML files are
written to the
.B html
directory.
.TP
.BI "\-n " name ", \-\-name " name
Project name (for HTML header/footer)
.TP
.BI "\-u " url ", \-\-url " url
Project URL (for HTML header/footer)
.TP
.B \-f, \-\-frames
Generate a frames\-based table of contents.
.TP
.BI "\-c " sheet ", \-\-css " sheet
CSS stylesheet for HTML files.  If
.I sheet
is a file, then the stylesheet is copied from that file; otherwise,
.I sheet
is taken to be the name of a built\-in stylesheet.  For a list of
the built\-in stylesheets, run
.BR "epydoc \-\-help css" .
.TP
.BI "\-\-private\-css " sheet
CSS stylesheet for HTML files containing private API documentation.
If
.I sheet
is a file, then the stylesheet is copied from that file;
otherwise,
.I sheet
is taken to be the name of a built\-in stylesheet.  For a list of the
built\-in stylesheets, run 
.BR "epydoc \-\-help css" .
.TP
.BI "\-\-help\-file " file
A file containing the body of the help page for the HTML output.
Navigation bars will be added at the top and bottom of this help file.
If no file is specified, then a default help file is used.
.TP
.B \-\-no\-private
Do not produce documentation for private objects.
.TP
.B \-\-show\-imports
Include a list of the classes and functions that each module imports
on the module documentation pages.
.TP
.B \-\-builtins
Add the builtin modules (as defined by sys.builtin_module_names) to
the list of modules to document.
.TP
.B \-v, \-\-verbose
Produce verbose output.  In particular, this option displays progress
bars while it imports the modules, builds the documentation, and
writes the documentation.
.TP
.B \-vv, \-vvv, \-vvvv
Produce successively more verbose output.
.TP
.B \-q, \-\-quiet
Supress the generation of epytext warnings and errors.
.RE
.PP
Documentation checking options:
.RS 4
.TP
.B modules...
The list of the modules whose documentation should be checked.
Modules may be specified using either filenames (such as
.BR epydoc/epytext.py )
or module names (such as
.BR os.path ).
The filename for a package is its
.B __init__.py
file.
.TP
.B \-\-check
Perform completeness checks on the documentation.
.TP
.B \-p
Perform checks on private objects.
.TP
.B \-v, \-\-verbose
Produce verbose output.
.TP
.B \-q
Supress the generation of epytext warnings and errors.
.RE
.PP
Other options:
.RS 4
.TP
.B \-h, \-\-help, \-\-usage, \-?
Display a usage message.
.TP
.BI "\-h " topic ", \-\-help " topic
Display information about a specific topic.  Currently,
information is available about the following topics:
.BR css ", " version ", and " usage .
.TP
.B \-V, \-\-version
Print the version of Epydoc.
.RE
.\" ================== HTML FILES ====================
.SH HTML FILES
The API documentation produced by 
.B epydoc
consists of the following files:
.RS 4
.TP
.IB module .html
The API documentation for a module.  
.I module
is the complete dotted name of the module, such as 
.B sys
or
.BR epydoc.epytext .
.TP
.IB class .html
The API documentation for a class, exception, or type.
.I class
is the complete dotted name of the class, such as
.B epydoc.epytext.Token
or
.BR array.ArrayType .
.TP
.B epydoc\-trees.html
The module and class hierarchies for the project.
.TP
.B epydoc\-index.html
The term index and identifier index for the project.
.TP
.B epydoc\-help.html
The help page for the project.  This page explains how to use and
navigate the webpage produced by epydoc.
.TP
.B epydoc\-frames.html
The frames index file.  This file defines three frames: two frames on
the left side of the window contain a table of contents, and the main
frame on the right side of the window contains documentation pages.
.B epydoc\-frames.html
is only generated if the
.B \-f
option is used to create a frames\-based table of contents.
.TP
.B epydoc\-toc.html
The top\-level table of contents page.  This page is displayed in the
upper\-left frame of
.BR epydoc\-frames.html ,
and provides links to
.B epydoc\-project\-toc.html
and the
.IB module \-mtoc.html
files.
.B epydoc\-toc.html
is only generated if the
.B \-f
option is used to create a frames\-based table of contents.
.TP
.B epydoc\-project\-toc.html
The table of contents for the entire project.  This page is displayed
in the lower\-left frame of
.BR epydoc\-frames.html ,
and provides links to every class, type, exception, function, and
variable defined by the project.
.B epydoc\-project\-toc.html
is only generated if the
.B \-f
option is used to create a frames\-based table of contents.
.TP
.IB module \-mtoc.html
The table of contents for a module.  This page is displayed in the
lower\-left frame of
.BR epydoc\-frames.html ,
and provides links to every class, type, exception, function, and
variable defined by the module.
.I module
is the complete dotted name of the module, such as 
.B sys
or
.BR epydoc.epytext .
.IB module \-mtoc.html
is only generated if the
.B \-f
option is used to create a frames\-based table of contents.
.TP
.B epydoc.css
The CSS stylesheet used to display all HTML pages.
.RE
.PP
By default,
.B epydoc
creates two subdirectories in the output directory:
.B public
and
.BR private .
Each directory contains all of the files specified above.
But if the
.B \-\-no\-private
option is used, then no subdirectories are created, and the public
documentation is written directly to the output directory.
.\" ================== EXAMPLES ====================
.SH EXAMPLES
.TP
.BR "epydoc \-n " epydoc " \-u " "http://epydoc.sf.net epydoc/*.py"
Generate API documentation for the epydoc package and all of its
submodules, and write the output to the
.B html
directory.  In the headers and footers, use
.B epydoc
as the project name, and
.B http://epydoc.sf.net
as the project URL.
.TP
.BR "epydoc \-o "api " \-f \-\-css " blue " \-\-private\-css " "green sys"
Generate API documentation for the
.B sys
module, and write the output to the
.B api
directory.  Include a frames\-based table of contents, and use
different stylesheets for the public and private versions of the
documentation.
.\" ================== EXIT STATUS ====================
.SH EXIT STATUS
.TP
.B 0
Successful program execution.
.TP
.B 1
Usage error.
.TP
.B other
Internal error (Python exception).
.SH AUTHOR
Epydoc was written by Edward Loper.  This man page was originally
written by Moshe Zadka, and is currently maintained by Edward Loper.
.SH BUGS
Report bugs to <edloper@gradient.cis.upenn.edu>.
.SH SEE ALSO
.BR epydocgui (1)
.TP
.B The epydoc webpage
<http://epydoc.sourceforge.net>
.TP
.B The epytext markup language manual
<http://epydoc.sourceforge.net/epytext.html>
